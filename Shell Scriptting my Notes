How to view content of the file
-------------------------------
We can view content of the file by using the following commands:
1. cat
2. tac
3. rev
4. head
5. tail
6. more 
7. less

1. cat
------
cat filename.extension
cat abc.text
cat -n abc.txt [to get the line no.s also]
cat -b abc.txt [to remove blank lines]
cat -nb abc.txt [to remove blank lines and blank spaces]
cat file1 file2 file3 file4 file5 [to view multiple files content simultaneously]
cat -n file1 file2 file3 [get the line no.s of all files]

create a new file with some content
-----------------------------------
cat > filename
---write something on file---
---write something on file---
ctrl+d to save file

to append some extra data to an existing file
---------------------------------------------
cat >> filename
---some more data---
---some more data---

to copy content of one file to another file
-------------------------------------------
cp file1 file2
cat file1 > file2

to append one file content to another file content
--------------------------------------------------
cat file1 >> file2

to copy content of multiple file to a single file
-------------------------------------------------
file1 file2 file3 file4 file5 > total.txt

to append content of multiple file to a single file
-------------------------------------------------
file1 file2 file3 file4 file5 >> total.txt


2. tac[vertical reversal]
-------
It is reverse of cat command means display content in reverse form
here total content will reverse but line not reverse 
cat filename

3. rev[horizontal reversal]
------
rev means reversal
here each line will be reversal 


cat command is best suitable for small files but if large files are there then we should go for head,tail,more,less

4. head
-------
to view specified no of files from top of the file
head -<any number> filename [display only top 5 lines]
head -n -5 filename [it will display all lines from top except last 5 lines]
head -c 100 filename [display first 100 character of the file]


5. tail
-------
to view specified no of files from bottom of the file
head -<any number> filename [display only top 5 lines]
head -n -5 filename [it will display last 5 lines]
head -c 100 filename [display first 100 character of the file]



Word Count Command(wc command)
------------------------------
We can count no of words along with that we can count no of lines and no of character present in the given file


wc filename
	no_of_lines , no_of_words , no_of_characters , filename
	
wc a.txt
	6  24 206 a.txt

6 -> no of lines
24 -> no of words
206 -> no of characters

wc -l filename  [get no of lines]
wc -w filename  [get no of words]
wc -c filename  [get no of characters]
wc -wc filename [get no of word and character]
wc -lc filename [get no of line and character]


Redirection
-----------
Redirection is a feature in Linux such that when executing a command, you can change the standard input/output devices. The basic workflow of any Linux command is that it takes an input and give an output.

>>> The standard input (stdin) device is the keyboard.
>>> The standard output (stdout) device is the screen.
With redirection, the above standard input/output can be changed.

Standard Input,Standard Output ,Standard Error are data streams and can flow from one place to another place . We can
can redirect these streams

File				File Descriptor
-------------------------------------------------
Standard Input STDIN	   	       0
Standard Output STDOUT		       1
Standard Error STDERR		       2


1. Redirection Standard Output
------------------------------
>> Standard OP is associated with 1 (0 means standard IP , 1 means standard OP , 2 means standard error)
>> Standard OP connected with terminal
>> By default standard OP connected with terminal but we can redirect this standard OP from terminal to some where else
   based on our req
>> We can perform output redirection by using > and >> symbols


> will perform overwriting of existing data
>> will perform appending to exitsing data

Eg. to redirect standard OP to cat command from terminal to output.txt 


$ cat 1 > output.txt[perform overwriting in file]
$ cat 1 >> output.txt[perform appending of data in file]

	
>> by default > and >> is always meant for ouput redirection only 
>> for using > or >> we don't need to use 1 always it is optional


2. Redirecting standard error
-----------------------------
>> Bydefault standard error device is connected to terminal . Instead of terminal we can redirect error message from 
>> terminal to our required place based on our requirement

cal 1234 

>> We can implement error redirection by using same > and >> symbol
>> Standard error is associated with digit 2

>> $ cal sdsfsdfsfsdfsdf
>> by executing this don't display this error terminal just redirect this error to error.txt
>> in redirection output taking no in command cat 1 > filename [here taking 1 is not compl..]
>> but in redirecting error taking no is compl... cal dfdfdfdf 2>> error.txt

3. Redirection standard input
-----------------------------
>> By default standard ip device is connected with keyboard. but we can redirect from keyboard to somewhere else  
   based on our requirement

>> Standard IP stream associated with 0
>> We can perform input redirection by using < symbol

$ cat 0< a.txt

>> this command is taking input from the a.txt insteam from keyboard[standard input] , it will display OP to standard 
   OP device 
>> here 0 is not compl...

Read IP from a.txt and send that OP to output.txt
-------------------------------------------------
cat 0< a.txt 1> output.txt
cat < a.txt > output.txt

cat < a.txt >> output.txt





Piping Concept
-------------
